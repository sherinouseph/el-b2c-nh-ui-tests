
package com.englishtown.commerceclient.generated;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 */
@WebServiceClient(name = "SubscriptionService", targetNamespace = "http://tempuri.org/")
public class SubscriptionService
        extends Service {
    private final static QName SUBSCRIPTIONSERVICE_QNAME = new QName("http://tempuri.org/", "SubscriptionService");

    static {

    }

    public SubscriptionService(URL wsdlLocation) {
        super(wsdlLocation, SUBSCRIPTIONSERVICE_QNAME);
    }

    public SubscriptionService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SUBSCRIPTIONSERVICE_QNAME, features);
    }

    public SubscriptionService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SubscriptionService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * @return returns ISubscriptionService
     */
    @WebEndpoint(name = "BasicHttpBinding_ISubscriptionService")
    public ISubscriptionService getBasicHttpBindingISubscriptionService() {
        return super.getPort(new QName("http://tempuri.org/", "BasicHttpBinding_ISubscriptionService"), ISubscriptionService.class);
    }

    /**
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns ISubscriptionService
     */
    @WebEndpoint(name = "BasicHttpBinding_ISubscriptionService")
    public ISubscriptionService getBasicHttpBindingISubscriptionService(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "BasicHttpBinding_ISubscriptionService"), ISubscriptionService.class, features);
    }

    /**
     * @return returns ISubscriptionService
     */
    @WebEndpoint(name = "Local")
    public ISubscriptionService getLocal() {
        return super.getPort(new QName("http://tempuri.org/", "Local"), ISubscriptionService.class);
    }

    /**
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns ISubscriptionService
     */
    @WebEndpoint(name = "Local")
    public ISubscriptionService getLocal(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "Local"), ISubscriptionService.class, features);
    }

    /**
     * @return returns ISubscriptionService
     */
    @WebEndpoint(name = "QA")
    public ISubscriptionService getQA() {
        return super.getPort(new QName("http://tempuri.org/", "QA"), ISubscriptionService.class);
    }

    /**
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns ISubscriptionService
     */
    @WebEndpoint(name = "QA")
    public ISubscriptionService getQA(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "QA"), ISubscriptionService.class, features);
    }

    /**
     * @return returns ISubscriptionService
     */
    @WebEndpoint(name = "Staging")
    public ISubscriptionService getStaging() {
        return super.getPort(new QName("http://tempuri.org/", "Staging"), ISubscriptionService.class);
    }

    /**
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns ISubscriptionService
     */
    @WebEndpoint(name = "Staging")
    public ISubscriptionService getStaging(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "Staging"), ISubscriptionService.class, features);
    }

    /**
     * @return returns ISubscriptionService
     */
    @WebEndpoint(name = "Live")
    public ISubscriptionService getLive() {
        return super.getPort(new QName("http://tempuri.org/", "Live"), ISubscriptionService.class);
    }

    /**
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns ISubscriptionService
     */
    @WebEndpoint(name = "Live")
    public ISubscriptionService getLive(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "Live"), ISubscriptionService.class, features);
    }
}
